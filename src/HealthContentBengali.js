import React, { useState } from "react";
import { Row, Col, Card, Button } from "react-bootstrap";
import { FaPlay, FaChevronDown, FaChevronUp } from "react-icons/fa"; // Icons from React-Icons
import ViewContent from "./ViewContent"; // Import the modal component

const videoData = [
  {
    title: "‡¶°‡¶æ‡ßü‡¶æ‡¶¨‡ßá‡¶ü‡¶ø‡¶∏ ‡¶Ü‡¶∞ ‡¶®‡ßü, ‡¶°‡¶æ‡ßü‡¶æ‡¶¨‡ßá‡¶ü‡¶ø‡¶∏‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶æ‡¶∞‡¶® ‡¶ú‡¶æ‡¶®‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ö‡¶ø‡¶∞‡¶§‡¶∞‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/x_XqMyqa4l4",
  },
  {
    title: "‡¶ö‡ßÅ‡¶≤ ‡¶™‡¶°‡¶º‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶æ‡¶ô‡ßç‡¶ó ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/lmLfDuMadUA",
  },
  {
    title: "‡¶≠‡¶ø‡¶ü‡¶æ‡¶Æ‡¶ø‡¶® ‡¶°‡¶ø ‡¶ï‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡¶¨‡ßá‡¶®?",
    description: "‡¶°‡¶æ‡¶É ‡¶Æ‡ßÅ‡¶ú‡¶ø‡¶¨‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶® ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/6RIezZuk0qk",
  },
  {
    title: "‡¶§‡¶ø‡¶® ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶∂‡ßç‡¶¨‡¶æ‡¶∏-‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶¨‡¶æ‡¶∏‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º‡¶æ‡¶Æ ‡¶Ø‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶™‡¶æ‡¶¨‡ßá‡¶® ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶§‡ßç‡¶§‡¶Æ ‡¶∏‡ßÅ‡¶∏‡ßç‡¶•‡¶§‡¶æ",
    description: "‡¶°‡¶æ‡¶É ‡¶Æ‡ßÅ‡¶ú‡¶ø‡¶¨‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶® ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/RSGDzstzTKM",
  },
  {
    title: "‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶π ‡¶®‡¶ø‡¶∞‡¶æ‡¶Æ‡ßü‡¶ï‡¶æ‡¶∞‡¶ø ‡¶π‡¶≤‡ßÅ‡¶¶ ‡¶ö‡¶æ ‡¶è‡¶∞ ‡¶â‡¶™‡¶ï‡¶æ‡¶∞‡¶ø‡¶§‡¶æ, ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡ßá‡¶® ?",
    description: "‡¶°‡¶æ‡¶É ‡¶Æ‡ßÅ‡¶ú‡¶ø‡¶¨‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶® ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/oQZDWHLJjx4",
  },
  {
    title: "‡¶®‡¶æ‡¶∞‡¶ø‡¶ï‡ßá‡¶≤ ‡¶§‡ßá‡¶≤ ‡¶è‡¶ï ‡¶Æ‡¶π‡¶æ ‡¶î‡¶∑‡¶ß",
    description: "‡¶°‡¶æ‡¶É ‡¶Æ‡ßÅ‡¶ú‡¶ø‡¶¨‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶® ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/MZHTDfN6AmM",
  },
  {
    title: "‡¶™‡ßá‡¶ü‡ßá‡¶∞ ‡¶Æ‡ßá‡¶¶ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶π‡¶ú ‡¶â‡¶™‡¶æ‡ßü",
    description: "‡¶°‡¶æ‡¶É ‡¶Æ‡ßÅ‡¶ú‡¶ø‡¶¨‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶® ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/ZMFaQ9MiL3o",
  },
  {
    title: "‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ú‡¶ø ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∞‡ßã‡¶ß‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶æ‡¶ï‡ßÉ‡¶§‡¶ø‡¶ï ‡¶â‡¶™‡¶æ‡ßü",
    description: "‡¶°‡¶æ‡¶É ‡¶Æ‡ßÅ‡¶ú‡¶ø‡¶¨‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶® ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/HFkFT4vYzNY",
  },
  {
    title: "‡¶Ø‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶ö‡¶∞‡ßç‡¶¨‡¶ø ‡¶ñ‡ßá‡¶≤‡ßá ‡¶∂‡¶∞‡ßÄ‡¶∞‡ßá ‡¶ú‡¶Æ‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶ö‡¶∞‡ßç‡¶¨‡¶ø ‡¶ó‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/1arCsrFgGKI",
  },
  {
    title: "‡¶ì‡¶∑‡ßÅ‡¶ß ‡¶õ‡¶æ‡¶°‡¶º‡¶æ ‡¶°‡¶æ‡ßü‡¶æ‡¶¨‡ßá‡¶ü‡¶ø‡¶∏ ‡¶®‡¶ø‡ßü‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶®‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞‡ßÄ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/YnEgQOci8D0",
  },
  {
    title: "‡¶Ü‡¶™‡ßá‡¶≤ ‡¶∏‡¶ø‡¶°‡¶æ‡¶∞ ‡¶≠‡¶ø‡¶®‡ßá‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶ø, ‡¶ï‡ßá‡¶®, ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ñ‡¶æ‡¶¨‡ßá‡¶®?",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/0d13azDOGOY",
  },
  {
    title: "IBS ‡¶è‡¶¨‡¶Ç ‡¶ó‡ßç‡¶Ø‡¶æ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶è‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/B-5wCEpCYxk",
  },
  {
    title: "‡¶´‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø ‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞ ‡¶ï‡¶ø? ‡¶ï‡ßá‡¶® ‡¶π‡ßü? ‡¶¨‡¶æ‡¶Å‡¶ö‡¶æ‡¶∞ ‡¶â‡¶™‡¶æ‡ßü ‡¶ï‡¶ø?",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/e3HKUrFo47U",
  },
  {
    title: "‡¶∂‡ßç‡¶¨‡¶æ‡¶∏‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶™‡ßÅ‡¶∞‡ßã ‡¶™‡ßÉ‡¶•‡¶ø‡¶¨‡ßÄ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡ßü‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶®‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/d8L-kKEmQRw",
  },
  {
    title: "‡¶Ö‡¶ü‡ßã‡¶´‡ßá‡¶ú‡¶ø: ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶π‡¶æ‡¶∞‡¶æ‡¶®‡ßã ‡¶Ø‡ßå‡¶¨‡¶® ‡¶´‡¶ø‡¶∞‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡ßü",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/hrAUGwXsjUg",
  },
  {
    title: "‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶Å‡¶ö‡¶æ ‡¶∏‡¶¨‡¶ú‡¶ø ‡¶ñ‡¶æ‡¶¨‡ßã, ‡¶Ü‡¶∞ ‡¶≠‡¶æ‡¶§ ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ñ‡¶æ‡¶¨‡ßã",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/vk15UcLQl4M",
  },
  {
    title: "Sex Hormone Testosterone ‡¶è‡¶¨‡¶Ç ‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑ ‡¶ì ‡¶®‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶π‡¶æ‡¶∞‡¶æ‡¶®‡ßã ‡¶∂‡¶ï‡ßç‡¶§‡¶ø ‡¶´‡¶ø‡¶∞‡ßá ‡¶™‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶â‡¶™‡¶æ‡ßü",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/2hTVS5V-AHg",
  },
  {
    title: "‡¶π‡¶æ‡¶Å‡¶ö‡¶ø-‡¶ï‡¶æ‡¶∂‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶ö‡ßã‡¶ñ ‡¶ö‡ßÅ‡¶≤‡¶ï‡¶æ‡¶®‡ßã ‡¶∏‡¶π ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ú‡¶ø‡¶ú‡¶®‡¶ø‡¶§ ‡¶∞‡ßã‡¶ó ‡¶π‡¶≤‡ßá ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá‡¶®?",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/thfJcejdvUo",
  },
  {
    title: "‡¶®‡¶æ ‡¶ñ‡ßá‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶ï‡¶ø ‡¶ó‡ßç‡¶Ø‡¶æ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶π‡ßü?",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/R1Nj5Wk6K_c",
  },
  {
    title: "‡¶Æ‡¶æ‡¶®‡¶∏‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡¶∂‡¶æ‡¶®‡ßç‡¶§‡¶ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶è‡¶¨‡¶Ç ‡¶°‡¶ø‡¶™‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶ï‡¶æ‡¶ü‡¶ø‡ßü‡ßá ‡¶â‡¶†‡¶§‡ßá ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá‡¶®?",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/8ucBeuKuDo0",
  },
  {
    title: "‡¶≠‡¶æ‡¶≤‡ßã ‡¶ò‡ßÅ‡¶Æ‡ßá‡¶∞ ‡¶ó‡ßã‡¶™‡¶® ‡¶∞‡¶π‡¶∏‡ßç‡¶Ø",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/IrDB6slR6FA",
  },
  {
    title: "‡¶•‡¶æ‡¶á‡¶∞‡¶Ø‡¶º‡ßá‡¶° ‡¶®‡¶ø‡ßü‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶® ‡¶ï‡¶•‡¶æ",
    description: "‡¶°‡¶æ‡¶É ‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞ ‡¶ï‡¶¨‡¶ø‡¶∞ ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
    videoUrl: "https://www.youtube.com/embed/yQ9zKY4MSpw",
  },
];

const HealthContentBengali = () => {
  const [visibleVideos, setVisibleVideos] = useState(3); // Control the number of videos shown
  const [selectedVideo, setSelectedVideo] = useState(null); // Track the selected video
  const [showModal, setShowModal] = useState(false); // Track modal visibility

  const handleShowModal = (video) => {
    setSelectedVideo(video);
    setShowModal(true);
  };

  const handleCloseModal = () => {
    setSelectedVideo(null);
    setShowModal(false);
  };

  const handleShowMore = () => {
    setVisibleVideos((prev) => (prev === 3 ? videoData.length : 3));
  };

  return (
    <div
      className="container mt-4"
      style={{
        background: "linear-gradient(to bottom, #85e085, #ccffcc)",
        padding: "30px",
        borderRadius: "10px",
        fontFamily: "'Noto Sans Bengali', sans-serif",
      }}
    >
      <h1 className="text-center mb-4" style={{ color: "#3b3b3b", fontWeight: "bold" }}>
        üí™ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì
      </h1>
      <Row className="justify-content-center">
        {videoData.slice(0, visibleVideos).map((video, index) => (
          <Col xs={12} sm={12} md={6} lg={4} key={index} className="mb-4">
            <Card
              className="shadow-sm border-0 h-100"
              style={{ borderRadius: "15px" }}
            >
              <Card.Body className="d-flex flex-column">
                <Card.Title
                  className="text-primary text-center"
                  style={{
                    minHeight: "60px", // Ensures consistent height for titles
                  }}
                >
                  {video.title}
                </Card.Title>
                <div
                  className="embed-responsive embed-responsive-16by9 rounded shadow-sm flex-grow-1"
                  style={{ minHeight: "200px" }}
                >
                  <iframe
                    className="embed-responsive-item"
                    src={video.videoUrl}
                    allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                    allowFullScreen
                    title={video.title}
                    style={{
                      borderRadius: "10px",
                      width: "100%",
                      height: "100%",
                    }}
                  ></iframe>
                </div>
                <Card.Text
                  className="mt-3 text-muted text-center flex-grow-1"
                  style={{
                    minHeight: "60px", // Ensures consistent height for descriptions
                    overflowY: "auto", // Allows scrolling for long descriptions
                    WebkitOverflowScrolling: "touch", // Smooth scrolling on mobile
                  }}
                >
                  {video.description}
                </Card.Text>
                <Button
                  variant="primary"
                  className="d-flex align-items-center justify-content-center mt-auto w-100"
                  onClick={() => handleShowModal(video)}
                >
                  <FaPlay className="me-2" />
                  Watch This
                </Button>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>

      <div className="text-center mt-4">
        <Button
          variant="outline-primary"
          className="d-flex align-items-center justify-content-center mx-auto"
          onClick={handleShowMore}
          style={{ width: "200px", borderRadius: "50px" }}
        >
          {visibleVideos === 3 ? (
            <>
              <FaChevronDown className="me-2" />
              Show More
            </>
          ) : (
            <>
              <FaChevronUp className="me-2" />
              Show Less
            </>
          )}
        </Button>
      </div>

      {/* Modal Component */}
      {selectedVideo && (
        <ViewContent show={showModal} onHide={handleCloseModal} video={selectedVideo} />
      )}
    </div>
  );
};

export default HealthContentBengali;
